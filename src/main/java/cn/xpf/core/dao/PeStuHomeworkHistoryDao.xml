<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xpf.core.dao.PeStuHomeworkHistoryDao" >
  <resultMap id="BaseResultMap" type="cn.xpf.core.bean.PeStuHomeworkHistory" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="homework_id" property="homeworkId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="last_score" property="lastScore" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="user_file" property="userFile" jdbcType="VARCHAR" />
    <result column="check_user" property="checkUser" jdbcType="VARCHAR" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, homework_id, user_id, score, last_score, content, user_file, check_user, check_time, 
      state, creat_time, modify_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xpf.core.bean.PeStuHomeworkHistoryQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pe_stu_homework_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    id,homework_id,user_id,score,last_score,content,user_file,check_user,check_time,state,creat_time,modify_time
    from pe_stu_homework_history
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pe_stu_homework_history
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xpf.core.bean.PeStuHomeworkHistoryQuery" >
    delete from pe_stu_homework_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xpf.core.bean.PeStuHomeworkHistory" >
    insert into pe_stu_homework_history (id, homework_id, user_id, 
      score, last_score, content, 
      user_file, check_user, check_time, 
      state, creat_time, modify_time
      )
    values (#{id,jdbcType=VARCHAR}, #{homeworkId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{score,jdbcType=VARCHAR}, #{lastScore,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{userFile,jdbcType=VARCHAR}, #{checkUser,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xpf.core.bean.PeStuHomeworkHistory" >
    insert into pe_stu_homework_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="homeworkId != null" >
        homework_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="lastScore != null" >
        last_score,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="userFile != null" >
        user_file,
      </if>
      <if test="checkUser != null" >
        check_user,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="homeworkId != null" >
        #{homeworkId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="lastScore != null" >
        #{lastScore,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userFile != null" >
        #{userFile,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xpf.core.bean.PeStuHomeworkHistoryQuery" resultType="java.lang.Integer" >
    select count(*) from pe_stu_homework_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pe_stu_homework_history
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.homeworkId != null" >
        homework_id = #{record.homeworkId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.lastScore != null" >
        last_score = #{record.lastScore,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.userFile != null" >
        user_file = #{record.userFile,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUser != null" >
        check_user = #{record.checkUser,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pe_stu_homework_history
    set id = #{record.id,jdbcType=VARCHAR},
      homework_id = #{record.homeworkId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      last_score = #{record.lastScore,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      user_file = #{record.userFile,jdbcType=VARCHAR},
      check_user = #{record.checkUser,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xpf.core.bean.PeStuHomeworkHistory" >
    update pe_stu_homework_history
    <set >
      <if test="homeworkId != null" >
        homework_id = #{homeworkId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="lastScore != null" >
        last_score = #{lastScore,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userFile != null" >
        user_file = #{userFile,jdbcType=VARCHAR},
      </if>
      <if test="checkUser != null" >
        check_user = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xpf.core.bean.PeStuHomeworkHistory" >
    update pe_stu_homework_history
    set homework_id = #{homeworkId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      last_score = #{lastScore,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      user_file = #{userFile,jdbcType=VARCHAR},
      check_user = #{checkUser,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>